---
// GitHub username to fetch data for
const githubUsername = 'Bearloggs';

// Define a type for GitHub repo data
interface GitHubRepo {
  id: number;
  name: string;
  html_url: string;
  description?: string;
  language?: string;
  stargazers_count: number;
  forks_count: number;
  updated_at: string;
}

// Fetch GitHub data
let repos: GitHubRepo[] = [];
let error: string | null = null;

try {
  // Fetch repositories
  const reposResponse = await fetch(`https://api.github.com/users/${githubUsername}/repos?sort=updated&per_page=6`);
  if (!reposResponse.ok) throw new Error('Failed to fetch GitHub repositories');
  repos = await reposResponse.json();
} catch (e) {
  error = e instanceof Error ? e.message : 'An unknown error occurred';
  console.error('Error fetching GitHub data:', e);
}
---

<div class="github-projects mt-8">
  <h3 class="text-xl font-bold mb-4">Recent Projects</h3>
  {error ? (
    <div class="bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 p-4 rounded-lg">
      <p>Error loading GitHub projects: {error}</p>
    </div>
  ) : (
    <>
      {repos.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {repos.map((repo) => (
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow">
              <h4 class="font-bold mb-2">
                <a 
                  href={repo.html_url} 
                  target="_blank" 
                  rel="noopener noreferrer nofollow"
                  class="text-blue-600 dark:text-blue-400 hover:underline"
                >
                  {repo.name}
                </a>
              </h4>
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">
                {repo.description || 'No description available'}
              </p>
              <div class="flex flex-wrap gap-2 text-xs">
                {repo.language && (
                  <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-full">
                    {repo.language}
                  </span>
                )}
                <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center">
                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"/>
                  </svg>
                  {repo.stargazers_count}
                </span>
                <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center">
                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"/>
                  </svg>
                  {repo.forks_count}
                </span>
              </div>
              <div class="mt-3 text-xs text-gray-500 dark:text-gray-400">
                Updated {new Date(repo.updated_at).toLocaleDateString()}
              </div>
            </div>
          ))}
        </div>
      ) : (
        <p class="text-gray-600 dark:text-gray-400">No repositories found.</p>
      )}
    </>
  )}
</div> 