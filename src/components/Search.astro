---
import { type CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'blog'>[];
  allTags: string[];
}

const { posts, allTags } = Astro.props;
---

<div class="search-container mb-8">
  <div class="flex flex-col md:flex-row gap-4 mb-4">
    <input
      type="search"
      id="search-input"
      placeholder="Search articles..."
      class="flex-grow px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
    />
    <select
      id="tag-filter"
      class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
    >
      <option value="">All Tags</option>
      {allTags.map(tag => (
        <option value={tag}>{tag}</option>
      ))}
    </select>
  </div>
  
  <div id="search-results" class="space-y-4">
    {posts.map(post => (
      <article 
        class="search-item bg-white dark:bg-gray-800 rounded-lg shadow-md p-4"
        data-tags={post.data.tags.join(' ')}
        data-title={post.data.title.toLowerCase()}
        data-description={post.data.description.toLowerCase()}
      >
        <a href={`/blog/${post.slug}/`} class="block no-underline">
          <h3 class="text-xl font-bold mb-2 text-blue-600 dark:text-blue-400">
            {post.data.title}
          </h3>
          <p class="text-gray-600 dark:text-gray-400 mb-2">
            {post.data.description}
          </p>
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map(tag => (
              <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-full text-sm">
                #{tag}
              </span>
            ))}
          </div>
        </a>
      </article>
    ))}
  </div>
</div>

<script>
  const searchInput = document.getElementById('search-input');
  const tagFilter = document.getElementById('tag-filter');
  const searchResults = document.getElementById('search-results');
  const searchItems = document.querySelectorAll('.search-item');

  function performSearch() {
    const searchTerm = searchInput.value.toLowerCase();
    const selectedTag = tagFilter.value.toLowerCase();

    searchItems.forEach(item => {
      const title = item.dataset.title;
      const description = item.dataset.description;
      const tags = item.dataset.tags.toLowerCase();
      
      const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
      const matchesTag = !selectedTag || tags.includes(selectedTag);
      
      item.style.display = matchesSearch && matchesTag ? 'block' : 'none';
    });
  }

  searchInput.addEventListener('input', performSearch);
  tagFilter.addEventListener('change', performSearch);
</script> 