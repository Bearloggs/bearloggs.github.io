---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return import.meta.env.PROD ? !data.draft : true;
  });
  return posts.map(post => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<'posts'>;
const post = Astro.props;

// Extract headings from the MDX content
const headings = post.body?.match(/^#{1,6}\s.+$/gm)?.map(heading => {
  const depth = heading.match(/^#+/)?.[0].length || 1;
  const text = heading.replace(/^#+\s+/, '');
  const slug = text.toLowerCase().replace(/[^a-z0-9]+/g, '-');
  return { depth, slug, text };
}) || [];

// Render the MDX content
const { Content } = await post.render();
---

<BlogPost {...post.data} headings={headings}>
  <Content />
</BlogPost>
---