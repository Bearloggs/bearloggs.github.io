---
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description?: string;
  image?: string;
  article?: boolean;
  publishDate?: string;
  author?: string;
  keywords?: string;
}

const {
  title,
  description = "A comprehensive blog about Cybersecurity, DevSecOps, and MLOps. Explore in-depth articles, tutorials, and best practices for security professionals and developers.",
  image = "/default-og.png",
  article = false,
  publishDate,
  author = "Bearloggs",
  keywords = "cybersecurity, devsecops, mlops"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const ogImage = new URL(image, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes" />
    
    <!-- Security Headers -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="theme-color" content="#3B82F6" />
    
    <!-- Image Optimization -->
    <meta name="image" content={ogImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:alt" content={title} />
    
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Robots Meta Tags -->
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="revisit-after" content="7 days" />
    <meta name="author" content={author} />
    
    <!-- Language Meta Tags -->
    <meta name="language" content="English" />
    <link rel="alternate" hreflang="x-default" href={canonicalURL} />
    <link rel="alternate" hreflang="en" href={canonicalURL} />
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content={article ? "article" : "website"} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="HacknWatch" />
    <meta property="og:locale" content="en_US" />

    <!-- Article-specific Meta Tags -->
    {article && publishDate && (
      <>
        <meta property="article:published_time" content={publishDate} />
        <meta property="article:modified_time" content={publishDate} />
        <meta property="article:author" content={author} />
        <meta property="article:section" content="Cybersecurity" />
        {keywords.split(',').map(tag => (
          <meta property="article:tag" content={tag.trim()} />
        ))}
      </>
    )}

    <ViewTransitions />
    
    <!-- Theme Script -->
    <script is:inline>
      function applyTheme() {
        if (localStorage.getItem('theme') === 'dark' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
      
      // Apply theme on initial load
      applyTheme();
      
      // Handle theme changes during view transitions
      document.addEventListener('astro:after-swap', applyTheme);
    </script>

    <!-- Structured Data -->
    {article && publishDate && (
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": title,
        "description": description,
        "image": ogImage,
        "author": {
          "@type": "Person",
          "name": author
        },
        "publisher": {
          "@type": "Organization",
          "name": "HacknWatch",
          "logo": {
            "@type": "ImageObject",
            "url": new URL("/favicon-32x32.png", Astro.site)
          }
        },
        "datePublished": publishDate,
        "dateModified": publishDate,
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalURL
        },
        "keywords": keywords,
        "inLanguage": "en-US"
      })} />
    )}
    
    <!-- Default Structured Data for non-article pages -->
    {!article && (
      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "HacknWatch",
        "url": Astro.site,
        "description": description,
        "publisher": {
          "@type": "Organization",
          "name": "HacknWatch",
          "logo": {
            "@type": "ImageObject",
            "url": new URL("/logo.png", Astro.site)
          }
        },
        "inLanguage": "en-US"
      })} />
    )}
  </head>
  <body class="min-h-screen flex flex-col bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <Navbar />
    <main class="flex-grow max-w-6xl w-full mx-auto px-4 py-8" role="main">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
  }
  
  html {
    scroll-behavior: smooth;
  }
  
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
      Bitstream Vera Sans Mono, Courier New, monospace;
  }
</style>